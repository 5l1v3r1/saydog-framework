#!/usr/bin/python3

import socket
import os,sys
import time

u='\033[4m'
w='\x1b[00m'
r='\x1b[91m'
b='\x1b[36;1m'
y='\x1b[33m'

target = ''


def exit():
        print(r+'[!]'+w+' The user forces it to stop')
        print(r+'[!]'+w+' Exiting program')
        sys.exit(1)
        
def corrupt():
        print(r+'[?]'+w+' Command not found, please type help')

def help():
        print('')
        print('PORT SCANNER')
        print('------------')
        print('A port scan is an attack that sends client requests')
        print('to a range of server port addresses on a host')
        print('')
        print('command                                    example')
        print('-------                                    -------')
        print('set target [web target]      set target target.com')
        print('run, go, scan                                 scan')
        print('')

def main():
        global target
        while True:
                try:
                        psc = input(w+'saydog('+r+'pytoolkit/portscanner'+w+') > ')
                        if psc == 'help':
                                help()
                        elif psc == 'back':
                                sys.exit(0)
                        elif psc == 'clear':
                                os.system('clear')
                        elif 'set target' in psc:
                                target = psc.split()[(-1)]
                                print('target > '+target)
                                print(target, file=open('target.txt','w+'))
                        elif psc ==  'run' or psc  ==  'go' or psc == 'scan':
                                ip = socket.gethostbyname(target)
                                print(b+'[-] '+w+'Scanning to '+target)
                                print(b+'[-] '+w+'trying to get IP Address')
                                print(b+'[-] '+w+'ip address is '+ip)
                                print(b+'[-] '+w+'port scanner is running ...')
                                os.system('python __portscan__.py')
                        else:
                                corrupt()
                except KeyboardInterrupt:
                                exit()
                                
                                
main()